
name: CICD

on:

  push:
    branches: [ main, feature/add-ci-cd ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      resource_group_name:
        description: 'Name of the resource group for the environment.'
        required: true
        type: string
        default: 'github-test-demo'
      location:
        description: 'Azure region to deploy to'
        type: string
        default: 'australiasoutheast'
      subscription_id:
        description: 'Azure subscription id'
        required: true
        type: string
      keyvault_name:
        description: 'Name of the Azure Key Vault resource'
        required: true
        type: string
      logic_app_name:
        description: 'Name of the Logic App web API resource'
        required: true
        type: string
        
env:
  keyvault_logicapp_connection: kv-la-conn

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  azure_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Diagnostics
        run: |
          pwd
          ls

      # - name: Install jq
      #   run: sudo apt-get install jq

      - name: Replace parameter values in parameters.json
        run: |
          echo ===== Before ======
          cat 'src/parameters.json'
          jq '.parameters.connections_logicapp_keyvault_name.value |= "${{ github.event.inputs.keyvault_logicapp_connection }}"' src/parameters.json
          jq '.parameters.vaults_key_vault_name.value |= "${{ github.event.inputs.keyvault_name }}"' src/parameters.json
          jq '.parameters.workflows_lock_default_branch_name.value |= "${{ github.event.inputs.logic_app_name }}"' src/parameters.json
          jq '.parameters.strings_personal_access_token.value |= "${{ secrets.GITHUB_APP_SECRET }}"' src/parameters.json
          echo ====== After ======
          cat 'src/parameters.json'

      # Login to Azure
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          # Secret of the Azure Service principal
          creds: ${{ secrets.AZ_RG_DV_GITHUB_TEST_DEMO }}
          # ClientId of the Azure Service principal
          client-id: ${{ secrets.AZ_RG_DV_GITHUB_TEST_DEMO_CLIENT_ID }}          
          # Azure subscriptionId
          subscription-id: ${{ github.event.inputs.subscription_id }}
          
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          scope: subscription
          region: ${{ github.event.inputs.location }}
          resourceGroupName: ${{ github.event.inputs.resource_group_name }}
          template: 'src/template.json'
          deploymentMode: Incremental
          parameters: 'src/parameters.json'
