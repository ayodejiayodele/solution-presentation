# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      resource_group_name:
        description: 'Name of the resource group for the environment.'
        required: true
        type: string
        default: 'github-test-demo'
      subscription_id:
        description: 'Azure subscription id'
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  azure_login:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Login to Azure
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZ_RG_DV_GITHUB_TEST_DEMO }}
          # ClientId of the Azure Service principal created.
          client-id: ${{ secrets.AZ_RG_DV_GITHUB_TEST_DEMO_CLIENT_ID }}
          
          # Azure subscriptionId
          subscription-id: # optional
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          enable-AzPSSession: # optional
          # Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud
          environment: # optional, default is azurecloud
          # Set this value to true to enable support for accessing tenants without subscriptions
          allow-no-subscriptions: # optional
          # Provide audience field for access-token. Default value is api://AzureADTokenExchange
          audience: # optional, default is api://AzureADTokenExchange
